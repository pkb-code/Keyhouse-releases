name: Create Release from Private Repo

on:
  repository_dispatch:
    types: [new-release]

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Get latest release tag from private repo
        id: get_tag
        run: |
          tag_name=$(curl -s \
            -H "Authorization: token ${{ secrets.PRIVATE_REPO_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/pkb-code/keyhouse/releases/latest | jq -r .tag_name)
          echo "TAG_NAME=$tag_name" >> $GITHUB_ENV

      - name: Download release assets from private repo
        run: |
          # Obtener las URLs de los assets excluyendo los archivos de código fuente
          assets=$(curl -s \
            -H "Authorization: token ${{ secrets.PRIVATE_REPO_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/pkb-code/keyhouse/releases/latest | jq -r '.assets[] | select(.name | endswith(".zip") or endswith(".tar.gz") | not) | .url')

          mkdir -p release_assets

          # Descargar cada asset excluyendo los archivos de código fuente
          for asset_url in $assets; do
            asset_name=$(curl -s \
              -H "Authorization: token ${{ secrets.PRIVATE_REPO_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              $asset_url | jq -r '.name')
            curl -L -o release_assets/$asset_name \
              -H "Authorization: token ${{ secrets.PRIVATE_REPO_TOKEN }}" \
              -H "Accept: application/octet-stream" \
              $asset_url
          done

      - name: Create release in public repo
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: release_assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
